(()=>{"use strict";const t=class{constructor(t,e=[]){this.name=t,this.todos=e}get name(){return this._name}set name(t){this._name=t}addTodo(t){this.todos.push(t)}},e=class{constructor(t,e,o=!1,n="No date"){this.task=t,this.description=e,this.done=o,this.date=n}get done(){return this._done}set done(t){this._done=t}};class o{static initLocalStorage(){if(0!==localStorage.length)return;const n=new e("Create a new Todo!","Bla bla"),c=new t("Main",[n]);o.updateStorage([c])}static getStorage(){return JSON.parse(localStorage.getItem("projects")).map((o=>{const n=Object.assign(new t,o);return n.todos=n.todos.map((t=>Object.assign(new e,t))),n}))}static updateStorage(t){localStorage.setItem("projects",JSON.stringify(t))}static getProjectByName(t){const e=o.getStorage(),n=e.find((e=>e.name==t));return[n,e.indexOf(n)]}static getCurrentProject(){const t=document.querySelector(".current-project"),[e]=o.getProjectByName(t.textContent);return e}static updateProject(t){const e=o.getStorage(),[,n]=o.getProjectByName(t.name);e[n]=t,o.updateStorage(e)}}const n=o;class c{static renderView(){const t=n.getStorage(),e=t[0];c.renderProjects(t),c.renderTodos(e)}static renderProjects(t){t.forEach((t=>{c.createProjectButton(t)}))}static renderTodos(t){document.querySelector(".current-project").textContent=t.name;const e=document.querySelector(".todos-view");e.textContent="",t.todos.forEach((o=>{const n=c.createTodoElement(o);n.dataset.projindex=t.todos.indexOf(o),e.appendChild(n)}))}static createProjectButton(t){const e=document.querySelector("#project-list"),o=document.createElement("button");o.classList.add("btn","project","project-btn"),o.textContent=t.name,e.appendChild(o)}static createTodoElement(t){const e=document.createElement("div");e.classList.add("todo-element");const o=document.createElement("button");o.textContent="✓",o.classList.add("btn","todo-btn","check-todo");const n=c.createTodoContentElement(t),a=document.createElement("button");return a.textContent="⛌",a.classList.add("btn","todo-btn","remove-todo"),[o,n,a].forEach((t=>e.appendChild(t))),e}static createTodoContentElement(t){const e=document.createElement("div");e.classList.add("todo-content");const o=document.createElement("div"),n=document.createElement("p");n.classList.add("todo"),n.textContent=t.task;const c=document.createElement("p");c.classList.add("todo-description"),c.textContent=t.description,[n,c].forEach((t=>o.appendChild(t)));const a=document.createElement("input");return a.type="date",a.name="todo-date",a.id="todo-date",[o,a].forEach((t=>e.appendChild(t))),e}}const a=c;class r{static handleForms(){r.handleProjectForm(),r.handleTodoForm()}static handleProjectForm(){const e=document.querySelector("#new-project-form");e.addEventListener("submit",(o=>{o.preventDefault();const n=new FormData(e),c=new t(n.get("new-project-name"));a.createProjectButton(c),i.toggleClass(e.parentElement,"inactive")}))}static handleTodoForm(){const t=document.querySelector("#new-todo-form");t.addEventListener("submit",(o=>{o.preventDefault();const c=new FormData(t),r=n.getCurrentProject(),s=new e(c.get("new-todo-name"),c.get("new-todo-description"));r.addTodo(s),n.updateProject(r),a.renderTodos(r),i.toggleClass(t.parentElement,"inactive")}))}}const s=r;class d{static loadPage(){d.handleButtons(),s.handleForms(),a.renderView()}static handleButtons(){const t=document.querySelector("#add-proj"),e=document.querySelector(".new-project-div"),o=document.querySelector("#new-todo"),n=document.querySelector(".new-todo-div"),c=document.querySelector(".burger"),a=document.querySelector(".sidebar");t.addEventListener("click",(()=>d.toggleClass(e,"inactive"))),o.addEventListener("click",(()=>d.toggleClass(n,"inactive"))),c.addEventListener("click",(()=>d.toggleClass(a,"hidden")))}static toggleClass(t,e){t.classList.toggle(e)}}const i=d;n.initLocalStorage(),i.loadPage()})();